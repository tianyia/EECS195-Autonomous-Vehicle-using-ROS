#!/usr/bin/env python
import rospy
from geometry_msgs.msg import Twist
import random
import numpy as np
import math

def talker():
	pub = rospy.Publisher('/turtle1/cmd_vel', Twist, queue_size=10)
	rospy.init_node('swim_node', anonymous=True)
	rate_number = 100
	rate = rospy.Rate(rate_number)

	v_li = random.uniform(0.5, 2)
	v_an = random.uniform(1.5, 3)
	if random.uniform(-1,1) < 0:
		v_an = -v_an

	shutdown = 0
	count = 0
	target_count = rate_number*2*math.pi/v_an

	#while not rospy.is_shutdown():
	while shutdown/rate_number < 30:
		move_cmd = Twist()

		move_cmd.linear.x = v_li
		# Turn at 0.5 radians/s move_cmd.angular.z = 0.5 rotation
		move_cmd.angular.z = v_an

		flag = count / target_count
		if( (int(flag) % 2) == 1 ):
			move_cmd.angular.z = -v_an
			
		shutdown = shutdown + 1
		count = count + 1

		rospy.loginfo(move_cmd)
		pub.publish(move_cmd)
		rate.sleep()

if __name__ == '__main__':
	try:
		talker()
	except rospy.ROSInterruptException:
		pass